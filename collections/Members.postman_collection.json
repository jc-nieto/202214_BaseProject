{
	"info": {
		"_postman_id": "828d94bc-f5a3-424a-b145-55fcb102374a",
		"name": "Members",
		"description": "Buy or rent spacecrafts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23001645"
	},
	"item": [
		{
			"name": "Add a member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"member_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Juan Peraz\",\n    \"email\":\"jxc@algo.com\",\n    \"birthDate\":\"1970/02/24\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Add a member",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Juan Peraz\",\n    \"email\":\"jxc@algo.com\",\n    \"birthDate\":\"1970/02/24\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"Juan Peraz\",\n    \"email\":\"jxc@algo.com\",\n    \"birthDate\":\"1970/02/24\"\n}"
				}
			]
		},
		{
			"name": "Add a invalid member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"museum_id\", data.id);",
							"",
							"pm.test(\"Status code is 412\", function () {",
							"   pm.response.to.have.status(412);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"jxc@algo.com\",\n    \"birthDate\":\"1970/02/24\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Add a invalid member",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"jxc@algo.com\",\n    \"birthDate\":\"1970/02/24\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n   \"statusCode\": 412,\n   \"message\": \"The name is not present\"\n}"
				}
			]
		},
		{
			"name": "Get all members",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of members > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Get all members",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n        \"name\": \"Juan Peraz\",\n        \"email\":\"jxc@algo.com\",\n        \"birthDate\":\"1970/02/24\"\n    }\n]"
				}
			]
		},
		{
			"name": "Get one member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/{{member_Id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"{{member_Id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get one member",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/{{member_Id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{member_Id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"Juan Peraz\",\n    \"email\":\"jxc@algo.com\",\n    \"birthDate\":\"1970/02/24\"\n}"
				}
			]
		},
		{
			"name": "Get one invalid member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Get one invalid club",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The member with the given id was not found\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "member_Id",
			"value": "48a9ab90-1276-11ed-861d-0242ac120002",
			"type": "string"
		}
	]
}